
- name: Install RT pre-reqs through apt-get
  apt: pkg={{ item }} state=installed
  with_items:
  - build-essential 
  - postgresql-client 
  - apache2 
  - mailutils 
  - openssl 
  - libyaml-perl 
  - libyaml-appconfig-perl 
  - libssl-dev 
  - libexpat1-dev
  - libdbd-mysql-perl
  - libnet-smtp-ssl-perl 
  - procmail

- name: get latest RT release
  get_url: url=https://download.bestpractical.com/pub/rt/release/rt-4.2.9.tar.gz dest=/opt/

- name: extract RT 
  unarchive: src=/opt/rt-4.2.9.tar.gz dest=/opt/ copy=no

- name: copy rt dir to rt4 dir
  command: mv /opt/rt-4.2.9 /opt/rt4-install

- name: configure RT install
  command: ./configure
  args:  
    chdir: /opt/rt4-install

- name: configure cpan
  command: perl -MCPAN -e 'my $c = "CPAN::HandleConfig"; $c->load(doit => 1, autoconfig => 1); $c->edit(prerequisites_policy => "follow"); $c->edit(build_requires_install_policy => "yes"); $c->commit'
  args: 
    chdir: /opt/rt4-install
  async: 3600
  poll: 60

- name: make fixdeps
  shell: cd /opt/rt4-install && make fixdeps
  async: 3600
  poll: 60

- name: make install
  command: make install
  args:
    chdir: /opt/rt4-install

# Install plugins
# auto close plugin
#- name: get nagios autoclose plugin
#  get_url: url=https://github.com/bestpractical/rt-extension-nagios/archive/master.zip dest=/opt/

#- name: extract nagios autoclose plugin
#  unarchive: src=/opt/master dest=/opt/ copy=no

#- name: run perl Makefile.PL for nagios autoclose
#  command: perl Makefile.PL
#  args:
#    chdir: /opt/rt-extension-nagios-master

#- name: run make for nagios 
#  command: make
#  args:
#    chdir: /opt/rt-extension-nagios-master

#- name: run make install for nagios autoclose
#  command: make install
#  args:
#    chdir: /opt/rt-extension-nagios-master

# Extra plugins

#- name: make directories to put the plugins in
#  file: path=/opt/{{ item }} state=directory
#  with_items:
#    - RT-Extension-ActivityReports
#    - rt-extension-commandbymail

- name: get nagios all nagios plugins
  get_url: url={{ item.url }} dest=/opt/{{ item.name }}-master.zip
  with_items:
    - { url: 'https://github.com/bestpractical/rt-extension-activityreports/archive/master.zip', name: 'RT-Extension-ActivityReports' }
    - { url: 'https://github.com/bestpractical/rt-extension-commandbymail/archive/master.zip', name: 'rt-extension-commandbymail' }

- name: extract all nagios plugins
  unarchive: src=/opt/{{ item }}-master.zip dest=/opt/{{ item }} copy=no
  with_items:
    - RT-Extension-ActivityReports
    - rt-extension-commandbymail

- name: run perl Makefile.PL for all nagios plugins
  command: perl Makefile.PL
  args:
    chdir: /opt/{{ item }}
  with_items:
    - RT-Extension-ActivityReports
    - rt-extension-commandbymail

- name: run make for nagios plugins
  command: make
  args:
    chdir: /opt/{{ item }}
  with_items:
    - RT-Extension-ActivityReports
    - rt-extension-commandbymail


- name: run make install for nagios plugins
  command: make install
  args:
    chdir: /opt/{{ item }}
  with_items:
    - RT-Extension-ActivityReports
    - rt-extension-commandbymail



# We already have a DB, so no need to initialise the database

# Configure RT

- name: configure rt server
  copy: src=RT_SiteConfig.pm dest=/opt/rt4/etc owner=root group=www-data mode=0640

# Configure Procmail

- name: configure procmail
  copy: src=procmailrc.rt dest=/opt/rt4/etc/procmailrc.rt owner=root group=root mode=0644
